spring.application.name=SecurityApp
security.jwt.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/batch7
spring.datasource.username=postgres
spring.datasource.password=1234
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
logging.level.org.hibernate.SQL=INFO
springdoc.api-docs.path=/api-docs
server.servlet.context-path=/api
server.error.include-message=always
server.port=8080
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
app.uploadto.cdn=./cdn/

expired.token.password.minute=1200

#email follow : https://support.google.com/accounts/answer/185833?p=InvalidSecondFactor&visit_id=637690832060530868-1439835364&rd=1
spring.mail.host=
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.sender.name=admin
spring.mail.sender.mail=no-reply-@test.com
# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true


BASEURL=http://localhost:8080/api/
AUTHURL=http://localhost:8080/api/oauth/token

# KAFKA SET UP
spring.kafka.consumer.bootstarp-servers=localhost:9092
spring.kafka.consumer.group-id="my_group_id"
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstarp-servers=localhost:9092
spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

